version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: travio-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: travio
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - travio-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: travio-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - travio-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travio-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: mongodb://admin:password123@mongodb:27017/travio?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - travio-network

  # Web Frontend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: travio-web
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3000/api
      REACT_APP_SOCKET_URL: http://localhost:3000
    ports:
      - "3001:3000"
    depends_on:
      - backend
    volumes:
      - ./web:/app
      - /app/node_modules
    networks:
      - travio-network

  # AI Services (Optional)
  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
    container_name: travio-ai
    restart: unless-stopped
    environment:
      PYTHON_ENV: development
      REDIS_URL: redis://redis:6379
      MODEL_PATH: /app/models
    ports:
      - "5000:5000"
    depends_on:
      - redis
    volumes:
      - ./ai-services:/app
      - ai_models:/app/models
    networks:
      - travio-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: travio-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - web
    networks:
      - travio-network

  # Elasticsearch (for search functionality)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: travio-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - travio-network

  # Kibana (for Elasticsearch visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: travio-kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - travio-network

  # Prometheus (monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: travio-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - travio-network

  # Grafana (monitoring dashboard)
  grafana:
    image: grafana/grafana:latest
    container_name: travio-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - travio-network

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
  ai_models:

networks:
  travio-network:
    driver: bridge